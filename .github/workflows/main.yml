name: CI Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --no-cache-dir -r requirements.txt
        pip install pytest-cov

    - name: Download ZIP
      run: | 
        curl -v -u ${{ vars.CONTAINER_REGISTRY_USER }}:${{ secrets.CONTAINER_REGISTRY_PASSWORD }} \
        -o file.zip http://nexus.at04.devops.jala.university/repository/at-raw/MLService/MLService.zip


    - name: Unzip ZIP
      run: |
        mkdir -p uploads/Filexample/
        unzip -j file.zip "testsimages/*" -d uploads/Filexample/

    - name: Verify folder content
      run: |
        ls -la uploads/Filexample/

    - name: Run unit tests and check code coverage
      run: |
        python3 -m pytest --cov=models/Recognizer --cov-report=term tests/models_tests/ 
        python3 -m pytest --cov=routes --cov-report=term tests/routes_tests/
        python3 -m pytest --cov=utils --cov-report=term tests/utils_tests/ 

  sonarqube-static-code-analysis:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v4.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{vars.SONAR_HOST_URL}}
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=MLService
            -Dsonar.python.coverage.reportPaths=coverage.xml

      - name: Quality Gate
        id: sonarqube
        uses: sonarsource/sonarqube-quality-gate-action@v1.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{vars.SONAR_HOST_URL}}